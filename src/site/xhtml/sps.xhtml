<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"><html
  xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta http-equiv="content-type" content="application/xhtml+xml; charset=iso-8859-1" />
    <title>Configuration Management Plan</title>
  </head>
  <body>
    <h1>Build instructions</h1>
    <h2>Main Targets and phases</h2>
  <p>This provides information on the different build phases available</p>
    <dl>
      <dt>clean</dt>
      <dd>
        <p> Clean all files generated by compiling and preparation of the
          distribution files. Among others it cleans generated resources,
          documentation, compilation artifacts and data packages. It does not
          however delete build configuration data used for building. </p>
      </dd>
      <dt>compile</dt>
      <dd>
        <p> Compiles and links if necessary the software and generates all
          related data used directly by the software (such as resources). </p>
      </dd>
      <dt>deploy</dt>
      <dd>
        <p>Copies the final data packages or distribution archives to the remote
          repository for sharing with others. </p>
      </dd>
      <dt>install</dt>
      <dd>
        <p>In the case of a library, installs the package into the local
          repository, for use as a dependency in other projects locally. Package
          installation installs everything for the distribution, including
          documentation, resources and compiled binaries that may have been generated in the package phase.</p>
      </dd>
      <dt>package</dt>
      <dd>
        <p>Create a distribution archive for this software containing the the
          binaries, resources and documentation. The root of the archive is the
          actual directory name of the software project name, with a potential
          version name, for example myproject-1.0.0. The <code>package</code>
          target explicitly depends on all non-source files that are in the
          distribution, to make sure they are up to date in the distribution,
          including generated documentation and resources. </p>
        <p> This target may also generate data packages in required formats used
          for deployment in the <code>deploy</code> target. </p>
      </dd>
      <dt>test</dt>
      <dd>
        <p>Test the compiled source code through a unit testing framework.
          Testing does not require the software to be deployed or installed
          beforehand. </p>
      </dd>
      <dt>uninstall</dt>
      <dd>
        <p> In the case of a library, delete the previously installed files from
          the local repository, including configuration data. This target does
          not modify the directories where compilation is done, only the
          directories where files are installed. </p>
      </dd>
    </dl>
<h2>General system requirements</h2>
    <p>The following requirements are needed to build and package the software:</p>
    <h3>Software requirements</h3>
    <ul>
      <li>Java Development Kit 1.6 or later</li>
      <li>Maven version 3.2.5 or later.</li>
    </ul>
<p>Java compilation follows the Maven 4.0.0 model. </p>
    <h3>Hardware  requirements</h3>
    <ul>
      <li>At least 64 MiB of free hard disk space</li>
    </ul>
<h2>Build system configuration and overview</h2>
    <h3>Build preparation</h3>
    <p>If the package needs to be deployed then them maven <code>settings.xml</code> file in the <code>.m12</code> directory  should contain the credentials to deploy to the remove repository, for example, to deploy to ossrh server:<code>
    </code></p>
  <code>
    <p> &lt;servers&gt;<br />
&lt;server&gt;<br />
&lt;id&gt;ossrh&lt;/id&gt;<br />
&lt;username&gt;TheUserName&lt;/username&gt;<br />
&lt;password&gt;ThePassword&lt;/password&gt;<br />
&lt;/server&gt;</p>
    &lt;id&gt;github.com&lt;/id&gt;<br />
&lt;username&gt;TheUserName&lt;/username&gt;<br />
&lt;password&gt;ThePassword&lt;/password&gt;<br />
&lt;/server&gt;<br />
<p><br />
  &lt;/servers&gt;</p>
  </code>
  </p>

    <h3>Standard configuration</h3>
  <p>All java related projects automatically generate a standard MANIFEST.MF file which shall contain minimally the following information, if specified in the Maven project file:</p>
    
    <dl>
     <dt>Implementation-Vendor</dt>
     <dd>${project.organization.name} property</dd>
     <dt>Implementation-Title</dt>
     <dd>${project.name} property</dd>
     <dt>Implementation-Version</dt>
     <dd>${project.version}</dd>
     <dt>Build_Target</dt>
     <dd>The java runtime target    </dd>
    </dl>
    <p>The maven POM files contain different profiles by default. The different profiles are as follows:</p>
    
  <dl>
     <dt>dev</dt>
     <dd>Generates the release executable artifacts for deployment to a local repository with optimizations enabled and limited debugging information as well as API documentation in packaging required for repository deployment. This is the <em>default</em> active profile when building.</dd>
     <dt>release</dt>
     <dd>Generates the release artifacts for deployment to the deployment repository with optimization, signing and limited debugging information as well as generic source, binary and documentation packages for local web site distribution. </dd>
     <dt>debug</dt>
     <dd>Generates the debug executable artifacts with the <code>debug</code> classifier for local repository deployment with full debugging information.</dd>
    <dt>jdk14</dt>
     <dd>Generates the debug executable artifacts specifically targeting class file format 48 (JDK 1.4) with the <code>jdk14</code> classifier for deployment to a maven central repository. This is mainly used to target older systems, such CDC Foundation Profile. When running this profile, it requires JDK 1.5 to build, and uses the retrotranslator project tool to convert back to class file format compatible with JDK 1.4. It also verifies that no API outside of the specified available API's (for example: CDC Foundation profile) is used. </dd>
  </dl>
  
  <p>The following properties may be modified to change some of the options:</p>
    
    <dl>
     <dt>maven.compiler.source</dt>
     <dd>This property sets the source version for compilation. Applies to all profiles, except <code>jdk14</code></dd>
     <dt>maven.compiler.target</dt>
     <dd>This property sets the target version for compilation. Applies to all profiles, except <code>jdk14</code></dd>
     <dt>gpg.keyname</dt>
     <dd>This property sets the key ID used for signing the artifacts.</dd>
    </dl>
    
    <h2>Build procedure</h2>
    
    <p>The following steps should be followed for project building:</p>
    
    <ol> 
      <li>Execute <code>mvn install</code> to build and install the <code>dev</code> profile package for day to day development.</li>
      <li>Execute <code>mvn -P debug install</code> to build and install the <code>debug</code> profile packages.</li>
      <li>Execute <code>mvn -P jdk14 install</code> to build and install the JDK 1.4 profile packages.</li>
      <li>Execute <code>mvn site</code> to build and create the documentation associated with the project.</li>
      <li>Execute <code>mvn -P release package</code> to generate and sign the standard release artfiacts, as well as creating independently package installable release artifacts.</li>
    </ol>
  <h2>Release procedure</h2>
  <p>To deploy a release, the following steps should be followed:</p>
  <ol>
    <li>Update <code>/src/changes/changes.xml</code> by doing the following:
      <ol>
        <li>Add a new release element with version and description attributes</li>
        <li>Add action elements under the newly created release element with at least the type attribute (add, update, remove, fix) and content describing the changes in a high-level fashion.</li>
      </ol>
    </li>
    <li>Execute <code>mvn clean</code></li>
    <li>Execute <code>mvn install</code> to build and install the <code>dev</code> profile package for day to day development.</li>
    <li>Execute <code>mvn -P debug install</code> to build and install the <code>debug</code> profile packages.</li>
    <li>Execute <code>mvn -P jdk14 install</code> to build and install the JDK 1.4 profile packages.</li>
    <li>Execute <code>mvn site</code> to build and create the documentation associated with the project.</li>
    <li>Execute <code>mvn -P release package</code> to generate and sign the standard release artfiacts, as well as creating independently package installable release artifacts.</li>
    <li>Execute <code>mvm release:prepare -DDryRun=true</code> </li>
    <li>Execute <code>mvm release:perform -DDryRun=true</code> </li>
    <li>Execute <code>mvm release:prepare</code> </li>
    <li>Execute <code>mvm release:perform</code> </li>
  </ol>
  <p>&nbsp;</p>
</body>
</html>
